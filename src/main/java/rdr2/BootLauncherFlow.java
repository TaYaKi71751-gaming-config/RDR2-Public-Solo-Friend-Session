package rdr2;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

public class BootLauncherFlow {
	public String getString(){
		char CR = 0x0d;
		char LF = 0x0a;
		String[] prefixes = {
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
"<rage__fwuiFlowBlock>",
" <ID>boot_flow</ID>",
" <EntryPoints>",
"  <Item>",
"   <ID>default_entry</ID>",
"   <Target>boot_screen_host.account_picker_activity_sentinel.account_picker_wrapper</Target>",
"  </Item>",
"  <Item>",
"   <ID>bye</ID>",
"   <Target>boot_screen_host.legal_screen_activity_sentinel.stinger</Target>",
"  </Item>",
"  <Item>",
"   <ID>sign_out</ID>",
"   <Target>boot_screen_host.account_picker_activity_sentinel.account_picker_wrapper</Target>",
"  </Item>",
" </EntryPoints>",
" <ExitPoints>",
"  <Item>",
"   <ID>exit</ID>",
"  </Item>",
" </ExitPoints>",
" <FlowRoot>",
"  <ID>input_context_switch</ID>",
"  <State type=\"StateSetInputContext\">",
"   <ContextType>BOOT_FLOW</ContextType>",
"  </State>",
"  <Children>",
"   <Item>",
"    <ID>boot_screen_host</ID>",
"    <State type=\"StateUIObjectStreamedSceneHost\">",
"     <SceneName>boot_flow/boot_screen_host</SceneName>",
"     <GCOnRemove value=\"True\" />",
"    </State>",
"    <Children>",
"     <Item>",
"      <ID>account_picker_activity_sentinel</ID>",
"      <State type=\"rage__StateActivitySentinel\">",
"       <ActivityID>account_picker</ActivityID>",
"      </State>",
"      <Children>",
"       <Item>",
"        <ID>account_picker_wrapper</ID>",
"        <State type=\"StateAccountPicker\" />",
"        <LinkMap>",
"         <Item key=\"next\">",
"          <Target>account_picker</Target>",
"         </Item>",
"         <Item key=\"failed\">",
"          <Target>^.^.profile_flow_activity_sentinel.wait_for_profile</Target>",
"         </Item>",
"         <Item key=\"profile_changed\">",
"          <Target>^.^.profile_flow_activity_sentinel.wait_for_profile</Target>",
"         </Item>",
"         <Item key=\"profile_unchanged\">",
"          <Target>^.^.profile_flow_activity_sentinel.wait_for_profile</Target>",
"         </Item>",
"        </LinkMap>",
"        <Children>",
"         <Item>",
"          <ID>account_picker</ID>",
"          <State type=\"StateUIObjectStreamedSceneHost\">",
"           <SceneName>boot_flow/account_picker/account_picker_with_background</SceneName>",
"           <ParentPath>boot_screen_host.PAN_Content</ParentPath>",
"           <EnterAnimation>boot_screen_fade_in</EnterAnimation>",
"           <ExitAnimation>boot_screen_fade_out</ExitAnimation>",
"          </State>",
"         </Item>",
"        </Children>",
"       </Item>",
"      </Children>",
"     </Item>",
"     <Item>",
"      <ID>legal_screen_activity_sentinel</ID>",
"      <State type=\"rage__StateActivitySentinel\">",
"       <ActivityID>legal_screen</ActivityID>",
"      </State>",
"      <Children>",
"       <Item>",
"        <ID>stinger</ID>",
"        <State type=\"StateUIObjectStreamedSceneHost\">",
"         <SceneName>boot_flow/legal_splash/stinger</SceneName>",
"         <ParentPath>boot_screen_host.PAN_Content</ParentPath>",
"        </State>",
"        <LinkMap>",
"         <Item key=\"to_legal\">",
"          <Target>^.stinger</Target>",
"         </Item>",
"        </LinkMap>",
"       </Item>",
"       <Item>",
"        <ID>legal_screen</ID>",
"        <State type=\"StateUIObjectStreamedSceneHost\">",
"         <SceneName>boot_flow/legal_splash/legal_splash</SceneName>",
"         <EnterAnimation>legal_splash_animation</EnterAnimation>",
"         <ParentPath>boot_screen_host.PAN_Content</ParentPath>",
"        </State>",
"        <LinkMap>",
"         <Item key=\"next\">",
"          <Target>^.^.profile_flow_activity_sentinel.wait_for_profile</Target>",
"         </Item>",
"        </LinkMap>",
"       </Item>",
"      </Children>",
"     </Item>",
"     <Item>",
"      <ID>profile_flow_activity_sentinel</ID>",
"      <State type=\"rage__StateActivitySentinel\">",
"       <ActivityID>profile_flow</ActivityID>",
"      </State>",
"      <Children>",
"       <Item>",
"        <ID>wait_for_profile</ID>",
"        <State type=\"StateWaitForProfileLoad\" />",
"        <LinkMap>",
"         <Item key=\"next\">",
"          <Target>^.language_screen_wrapper</Target>",
"         </Item>",
"         <Item key=\"exit\">",
"          <Target>exit</Target>",
"          <LinkInfo>LINK_TO_EXTERNAL</LinkInfo>",
"         </Item>",
"         <Item key=\"yes\">",
"          <Target>exit</Target>",
"          <LinkInfo>LINK_TO_EXTERNAL</LinkInfo>",
"         </Item>",
"        </LinkMap>",
"       </Item>",
"       <Item>",
"        <ID>language_screen_wrapper</ID>",
"        <State type=\"StateLanguageSelect\" />",
"        <LinkMap>",
"         <Item key=\"next\">",
"          <Target>language_screen</Target>",
"         </Item>",
"         <Item key=\"failed\"platform=\"x64|orbis\">",
"          <Target>^.hdr_enabled_screen_wrapper</Target>",
"         </Item>",
"        </LinkMap>",
"        <Children>",
"         <Item>",
"          <ID>language_screen</ID>",
"          <State type=\"StateUIObjectStreamedSceneHost\">",
"           <SceneName>boot_flow/language_selection</SceneName>",
"           <ParentPath>boot_screen_host.PAN_Content</ParentPath>",
"          </State>",
"          <LinkMap>",
"           <Item key=\"to_next_screen\"platform=\"x64|orbis\">",
"            <Target>^.^.hdr_enabled_screen_wrapper</Target>",
"           </Item>",
"          </LinkMap>",
"         </Item>",
"        </Children>",
"       </Item>",
"       <Item>",
"        <ID>hdr_enabled_screen_wrapper</ID>",
"        <State type=\"StateStartupSettingSelection\">",
"         <SettingPath>",
"          <pathElements>",
"           <Item>display</Item>",
"           <Item>hdr</Item>",
"          </pathElements>",
"         </SettingPath>",
"        </State>",
"        <LinkMap>",
"         <Item key=\"next\">",
"          <Target>hdr_enabled_screen</Target>",
"         </Item>",
"         <Item key=\"failed\">",
"          <Target>^.brightness_screen_wrapper</Target>",
"         </Item>",
"        </LinkMap>",
"        <Children>",
"         <Item>",
"          <ID>hdr_enabled_screen</ID>",
"          <State type=\"StateUIObjectStreamedSceneHost\">",
"           <SceneName>boot_flow/hdr_enabled_screen</SceneName>",
"           <ParentPath>boot_screen_host.PAN_Content</ParentPath>",
"          </State>",
"          <LinkMap>",
"           <Item key=\"to_next_screen\">",
"            <Target>^.^.brightness_screen_wrapper</Target>",
"           </Item>",
"          </LinkMap>",
"         </Item>",
"        </Children>",
"       </Item>",
"       <Item>",
"        <ID>brightness_screen_wrapper</ID>",
"        <State type=\"StateGammaCalibration\">",
"         <MovieFilename>PAUSE_MENU_CALIBRATION</MovieFilename>",
"        </State>",
"        <LinkMap>",
"         <Item key=\"next\">",
"          <Target>brightness_screen</Target>",
"         </Item>",
"         <Item key=\"failed\">",
"          <Target>^.hdr_screen_wrapper</Target>",
"         </Item>",
"        </LinkMap>",
"        <Children>",
"         <Item>",
"          <ID>brightness_screen</ID>",
"          <State type=\"StateUIObjectStreamedSceneHost\">",
"           <SceneName>boot_flow/brightness_calibration</SceneName>",
"           <ParentPath>boot_screen_host.PAN_Content</ParentPath>",
"          </State>",
"          <LinkMap>",
"           <Item key=\"to_next_screen\">",
"            <Target>^.^.hdr_screen_wrapper</Target>",
"           </Item>",
"          </LinkMap>",
"         </Item>",
"        </Children>",
"       </Item>",
"       <Item>",
"        <ID>hdr_screen_wrapper</ID>",
"        <State type=\"StateHDRCalibration\">",
"         <MovieFilename>UIOBJECT_SCENE_GENERIC</MovieFilename>",
"        </State>",
"        <LinkMap>",
"         <Item key=\"next\">",
"          <Target>hdr_screen</Target>",
"         </Item>",
"         <Item key=\"failed\">",
"          <Target>^.subtitles_screen_wrapper</Target>",
"         </Item>",
"        </LinkMap>",
"        <Children>",
"         <Item>",
"          <ID>hdr_screen</ID>",
"          <State type=\"StateUIObjectStreamedSceneHost\">",
"           <SceneName>boot_flow/hdr</SceneName>",
"           <ParentPath>boot_screen_host.PAN_Content</ParentPath>",
"          </State>",
"          <LinkMap>",
"           <Item key=\"to_next_screen\">",
"            <Target>^.^.subtitles_screen_wrapper</Target>",
"           </Item>",
"          </LinkMap>",
"         </Item>",
"        </Children>",
"       </Item>",
"       <Item>",
"        <ID>subtitles_screen_wrapper</ID>",
"        <State type=\"StateSubtitlesSelect\">",
"         <SettingPath>",
"          <pathElements>",
"           <Item>display</Item>",
"           <Item>hud</Item>",
"           <Item>subtitles</Item>",
"          </pathElements>",
"         </SettingPath>",
"        </State>",
"        <LinkMap>",
"         <Item key=\"next\">",
"          <Target>subtitles_screen</Target>",
"         </Item>",
"         <Item key=\"failed\">",
"          <Target>^.audio_screen_wrapper</Target>",
"         </Item>",
"        </LinkMap>",
"        <Children>",
"         <Item>",
"          <ID>subtitles_screen</ID>",
"          <State type=\"StateUIObjectStreamedSceneHost\">",
"           <SceneName>boot_flow/subtitles_selection</SceneName>",
"           <ParentPath>boot_screen_host.PAN_Content</ParentPath>",
"          </State>",
"          <LinkMap>",
"           <Item key=\"to_next_screen\">",
"            <Target>^.^.audio_screen_wrapper</Target>",
"           </Item>",
"          </LinkMap>",
"         </Item>",
"        </Children>",
"       </Item>",
"       <Item>",
"        <ID>audio_screen_wrapper</ID>",
"        <State type=\"StateStartupSettingSelection\">",
"         <SettingPath>",
"          <pathElements>",
"           <Item>audio</Item>",
"           <Item>speakerOutput</Item>",
"          </pathElements>",
"         </SettingPath>",
"        </State>",
"        <LinkMap>",
"         <Item key=\"next\">",
"          <Target>audio_screen</Target>",
"         </Item>",
"         <Item key=\"failed\">",
"          <Target>exit</Target>",
"          <LinkInfo>LINK_TO_EXTERNAL</LinkInfo>",
"         </Item>",
"        </LinkMap>",
"        <Children>",
"         <Item>",
"          <ID>audio_screen</ID>",
"          <State type=\"StateUIObjectStreamedSceneHost\">",
"           <SceneName>boot_flow/audio_selection</SceneName>",
"           <ParentPath>boot_screen_host.PAN_Content</ParentPath>",
"          </State>",
"          <LinkMap>",
"           <Item key=\"to_next_screen\">",
"            <Target>exit</Target>",
"            <LinkInfo>LINK_TO_EXTERNAL</LinkInfo>",
"           </Item>",
"          </LinkMap>",
"         </Item>",
"        </Children>",
"       </Item>",
"      </Children>",
"     </Item>",
"    </Children>",
"   </Item>",
"  </Children>",
" </FlowRoot>",
"</rage__fwuiFlowBlock>"
		};
		String result = "";
		for(String prefix:prefixes){
			result += (prefix + CR);
		}
		return result;
	}
	public ArrayList<File> getPaths() throws IOException {
		Find find = new Find();
		ArrayList<File> play_rdr2_paths = find.findFile("PlayRDR2.exe");
		ArrayList<File> startup_meta_paths = new ArrayList<>();
		for(File play_rdr2_path:play_rdr2_paths){
			File rdr2_path = Path.getUpperPath(play_rdr2_path);
			File startup_meta_path = new File(String.join(File.separator,new String[]{rdr2_path + "","x64","boot_launcher_flow.ymt"}));
			if(Path.getUpperPath(startup_meta_path).exists()) {
				startup_meta_paths.add(startup_meta_path);
			}
		}
		return startup_meta_paths;
	}
	public void apply(String session_unique) throws IOException {
		StartupMeta startup_meta = new StartupMeta();
		String str = startup_meta.getString(session_unique);
		ArrayList<File> startup_meta_paths = startup_meta.getPaths();
		for(File startup_meta_path: startup_meta_paths){
			BufferedWriter writer = new BufferedWriter(new FileWriter(startup_meta_path));
			writer.write(str);
			writer.close();
		}
	}
	public void delete() throws IOException {
		StartupMeta startup_meta = new StartupMeta();
		ArrayList<File> startup_meta_paths = startup_meta.getPaths();
		for(File startup_meta_path: startup_meta_paths){
			startup_meta_path.delete();
		}
	}
}
// https://stackoverflow.com/questions/15464111/run-cmd-commands-through-java
